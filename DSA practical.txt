#include <stdio.h>
#include <stdbool.h>
#include <limits.h>

struct TreeNode {
    int data;
    struct TreeNode* left;
    struct TreeNode* right;
};

bool isBSTUtil(struct TreeNode* node, int min, int max) {
    if (node == NULL) {
        return true;
    }

    if (node->data < min || node->data > max) {
        return false;
    }

    return isBSTUtil(node->left, min, node->data - 1) && isBSTUtil(node->right, node->data + 1, max);
}

bool isBST(struct TreeNode* root) {
    return isBSTUtil(root, INT_MIN, INT_MAX);
}

int main() {
    struct TreeNode* root = NULL;
    // Construct a sample binary tree
    struct TreeNode* root = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    root->data = 10;
    root->left = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    root->left->data = 5;
    root->right = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    root->right->data = 15;
    root->left->left = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    root->left->left->data = 3;
    root->left->right = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    root->left->right->data = 7;

    if (isBST(root)) {
        printf("The tree is a binary search tree.\n");
    } else {
        printf("The tree is not a binary search tree.\n");
    }

    return 0;
}